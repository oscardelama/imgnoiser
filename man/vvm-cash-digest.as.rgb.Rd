% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/vvm-class.r
\name{vvm$digest.as.rgb}
\alias{vvm$digest.as.rgb}
\title{Process the raw image samples after their conversion to RGB.}
\arguments{
\item{file.name.from}{}

\item{file.name.to}{The \code{file.name.from} and \code{file.name.to} are the
  alphabetical range of the desired files from the folder given in
  \code{file.path}. These names should not include the file name
  extension, which is specified with \code{file.name.ext}.}

\item{file.path}{The file path where the raw image file samples are located.}

\item{file.name.ext}{The file name extension of the raw image file samples.
  It can be 'fit', 'fits' or 'pgm'. This file name extension may start or not
  with a period as in '.fit' or fit'.

  The supported values for the \code{img.file.name.ext} are '.fit' or '.fits'
  for the \href{http://fits.gsfc.nasa.gov/}{'FITS'} format or '.pgm' for the
  \href{http://netpbm.sourceforge.net/doc/pgm.html}{'PGM'} format.}

\item{min.raw}{}

\item{max.raw}{These are the the expected pixel values range. If more than
  the 2% of pixel values in an image channel sample is outside this range,
  the whole image is discarded. This is because the RGB processing requires
  all the channels be valid.

  Each parameter can be a single value or a vector of four values. For the
  former case, the same value is used as limit for the four channels,
  otherwise there must be four values, one per channel and in the image sample
  channels order.}

\item{is.neutral}{A logical value indicating if the target of the samples is
  a neutral surface. When that is the case additional raw white-balance is
  done per in a per sample basis.}

\item{map.to.rgb}{An object of the class \code{colmap} initialized with color
  data of the camera sensor whose image samples will be processed. This
  object must have selected a RGB color space target and white-balance
  calibrated for the samples that are going to be processed through the use
  of its function \code{colmap$get.conv.matrix.from.raw()}.}

\item{rgb.scale}{The scale of the RGB pixel values after the transformation
  from the camera raw space. The pixel values will be between 0 and the
  \code{rgb.scale}.

  In the conversion the RGB pixel values will be floating point numbers, not
  integers.}

\item{rgb.labels}{A character vector with the three labels for the RGB
  colors. By default they are \code{c('red', 'green', 'blue')}.}

\item{tone.curve}{A tone curve to be applied to the linear RGB colors after
  the conversion from linear raw to linear RGB. Possible character values
  are:

\itemize{

 \item \code{'camera.metadata'}: For the use of the tone curve in the data used
 to initialize the colmap object given in the \code{map.to.rgb} argument.

 \item \code{'linear'}: To keep convert the raw values to the target RGB
 space but leaving the values in linear way.

 \item \code{'sRGB'}: To use the tone curve prescribed by the sRGB color
 space.

 \item \code{'BT.709'}: To use the tone curve prescribed by that standard.

 \item \code{'Gamma.2.2'}: To use a standard 2.2 gamma tone curve.

 \item \code{'Gamma.1.8'}: To use a standard 1.8 gamma tone curve.

}

  This argument can also be a tone curve by itself. In such case, its first
  two columns must numeric and it must have at least 8 rows, with values in
  the [0,1]range. The first columns will represent the source color values
  which will be mapped to the corresponding value in the second column.

  During the tone curve application the missing values will be interpolated
  using smooth splines, with the required degree to pass over each given
  point.}
}
\value{
A \code{invisible} instance of the calling object.
}
\description{
Read raw image samples, convert them to a RGB color space and compute from
them noise variance and covariance channel statistics.
}
\details{
The calling arguments describe the list of raw image files that will be
processed in the same way as in the \code{digest} function. The image samples
file names are expected to have the following pattern:

\emph{\code{file.path}/\code{<img.file.base>}.\code{<file.name.ext>}}

Where \code{<img.file.base>} is alfabetically between the
\code{file.name.from} and \code{file.name.to} arguments.

In other words, the folder given in \code{file.path} is scanned looking
for files with base name between (and including) \code{file.name.from} and
\code{file.name.to}, having all of them the extension \code{file.name.ext}.

If your sample file names do not follow this pattern, you can specify them as
a character vector as argument for the \code{<file.name.from>} parameter.

The \code{\link{select.file.range}} may help you to get a baseline selection with
the files you want to get processed by this function.
}
\section{Usage}{

 \preformatted{
  vvm$digest.as.rgb(
     file.name.from = stop("The 'file.name.from' argument is missing."),
     file.name.to   = stop("The 'file.name.to' argument is missing."),
     file.path      = './',
     file.name.ext  = '.pgm',
     min.raw        = 0,
     max.raw        = Inf,
     is.neutral     = FALSE,
     map.to.rgb     = stop("The 'map.to.rgb' argument is missing."),
     rgb.scale      = 255,
     rgb.labels     = imgnoiser.option('rgb.labels'),
     tone.curve     = imgnoiser.option('tone.curve.id')
     )
 }
}
\examples{
\dontrun{

# Create a colmap object
cm.obj <- imgnoiser::colmap$new(imgnoiser::nikon.d7000.ISO100.colmap)

# Set target space to 'sRGB' and white-balance for the raw images
# neutral reference
neutral.raw <- c(3696, 7539, 5588)
cm.obj$get.conv.matrix.from.raw(neutral.raw, to.space = 'sRGB')

# Create a new vvm instance
rgb.vvm <- vvm$new(has.RGGB.pattern = TRUE)
img.path <- 'H:/Noise-Study/Nikon-D700/ISO-100/'

# Process the images
rgb.vvm$digest.as.rgb( file.name.from = '_ODL5695',
                       file.name.to   = '_ODL5767',
                       file.name.ext  = '.pgm',
                       file.path   = img.path,
                       is.neutral  = TRUE,
                       map.to.rgb  = cm.obj,
                       rgb.scale   = 255,
                       tone.curve  = 'camera.metadata')
#> 70 image samples were successfully processed as RGBs.
}
}
\seealso{
See the section \emph{"Input data for the *vvm* Procedure"} in the
  \emph{"Introduction to the *vvm* technique"} vignette,
  \code{\link{vvm}}.
}

